@use "sass:map";
@use "../base/colors" as *;
@use "../base/mixins" as *;
@use "button";

$marketo: (
	"white": (
		bgColor: $white,
		inputColor: $black,
		placeholderColor: $gray-500,
		borderColor: $gray-700,
		borderHoverColor: $gray-600,
		borderFocusColor: $green-300,
		errorColor: $red-600,
		textColor: $gray-500,
		linkColor: $green-600,
		linkHoverColor: $green-300,
		iconColor: $black,
		optionBgColor: $white
	),
	"ghost-black": (
		bgColor: transparent,
		inputColor: $black,
		placeholderColor: $gray-500,
		borderColor: $black,
		borderHoverColor: $gray-500,
		borderFocusColor: $black,
		errorColor: $red-600,
		textColor: $gray-400,
		linkColor: $black,
		linkHoverColor: $gray-300,
		iconColor: $black,
		optionBgColor: $white
	),
	"ghost-white": (
		bgColor: transparent,
		inputColor: $white,
		placeholderColor: $white-60,
		borderColor: $white,
		borderHoverColor: $white-60,
		borderFocusColor: $green-300,
		errorColor: $red-600,
		textColor: $white-60,
		linkColor: $green-300,
		linkHoverColor: $green-200,
		iconColor: $white,
		optionBgColor: $black
	)
);

$marketo-theme: "ghost-white" !default;
$marketo-styles: map.get($marketo, $marketo-theme);

.mktoForm {
	width: 100% !important;
	font-weight: 400;
	font-size: 14px;
	line-height: 16px;

	a {
		color: map.get($marketo-styles, linkColor);
		font-weight: 600;
		transition: 0.2s ease;
		transition-property: color;

		&:hover {
			color: map.get($marketo-styles, linkHoverColor);
		}
	}
}

.mktoFormRow:not(:first-of-type),
.mktoButtonRow,
.googleRecaptcha {
	margin-top: 16px;
}

.mktoFormRow:has(.mktoFormCol + .mktoFormCol) {
	display: flex;
	column-gap: 12px;
}

.mktoLabel {
	display: none;
}

.mktoField.mktoHasWidth {
	width: 100% !important;
	height: 48px;
	padding: 16px 12px;
	color: map.get($marketo-styles, inputColor);
	background-color: map.get($marketo-styles, bgColor);
	border: 1px solid;
	border-color: map.get($marketo-styles, borderColor);
	border-radius: 8px;
	outline-offset: -2px;

	&:hover {
		border-color: map.get($marketo-styles, borderHoverColor);
	}

	&:focus {
		border-color: map.get($marketo-styles, borderFocusColor);
		outline: 1px solid map.get($marketo-styles, borderFocusColor);
	}

	&[aria-invalid="true"]:focus-visible {
		border-color: map.get($marketo-styles, errorColor);
		outline-color: map.get($marketo-styles, errorColor);
	}
}

select.mktoField {
	background-image: svg-load("../sprite/arrow.svg" fill=map.get($marketo-styles, iconColor));
	background-repeat: no-repeat;
	background-position: calc(100% - 8px) center;
	background-size: 16px;
	cursor: pointer;
	appearance: none;
}

option {
	background-color: map.get($marketo-styles, optionBgColor);
}

textarea.mktoField {
	min-height: 144px;
}

::placeholder {
	color: map.get($marketo-styles, placeholderColor);
}

.mktoAsterix {
	display: none;
}

.mktoErrorMsg {
	margin-top: 2px;
	color: map.get($marketo-styles, errorColor);
	font-weight: 400;
	font-size: 12px;
	line-height: 14px;
}

.mktoCustomNumberField {
	position: relative;

	[type="number"] {
		appearance: textfield;
	}

	[data-step] {
		@extend .button;
		position: absolute;
		right: 8px;
		width: 16px;
		height: 16px;
		background-image: svg-load("../sprite/arrow.svg" fill=map.get($marketo-styles, iconColor));

		&:first-of-type {
			top: 8px;
			transform: rotate(180deg);
		}

		&:last-of-type {
			bottom: 8px;
		}
	}
}

.mktoHtmlText {
	width: 100% !important;
	margin-top: 3px;
	color: map.get($marketo-styles, textColor);
	font-weight: 400;
	font-size: 14px;
	line-height: 16px;

	em {
		font-style: normal;
	}
}

.mktoButton {
	@extend .button;
	@extend %size-48;

	@if $marketo-theme == "ghost-black" {
		@extend %primary-black;
	} @else {
		@extend %primary-green;
	}
}
